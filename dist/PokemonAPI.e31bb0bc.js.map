{"version":3,"sources":["index.js"],"names":["pokemonEl","document","querySelector","horses","buttonRaceEl","winnerEl","progressEl","resultTableEl","num","addEventListener","textContent","promises","map","hors","run","Promise","race","then","horse","time","apdateTableWinner","all","r","res","getRandomTime","setTimeout","tr","insertAdjacentHTML","min","max","Math","floor","random"],"mappings":"AAAA,IAAMA,SAAS,GAAGC,QAAQ,CAACC,aAAT,CAAuB,oBAAvB,CAAlB,EAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;;AAEA,IAAMC,MAAM,GAAG,CACX,aADW,EAEX,SAFW,EAGX,gBAHW,EAIX,YAJW,EAKX,WALW,CAAf;AAQA,IAAMC,YAAY,GAAEH,QAAQ,CAACC,aAAT,CAAuB,iBAAvB,CAApB;AACA,IAAMG,QAAQ,GAAEJ,QAAQ,CAACC,aAAT,CAAuB,YAAvB,CAAhB;AACA,IAAMI,UAAU,GAAEL,QAAQ,CAACC,aAAT,CAAuB,cAAvB,CAAlB;AACA,IAAMK,aAAa,GAAEN,QAAQ,CAACC,aAAT,CAAuB,0BAAvB,CAArB;AACA,IAAIM,GAAG,GAAG,CAAV;AAEAJ,YAAY,CAACK,gBAAb,CAA8B,OAA9B,EAAuC,YAAM;AACzCJ,EAAAA,QAAQ,CAACK,WAAT,GAAsB,EAAtB;AACAJ,EAAAA,UAAU,CAACI,WAAX,GAAyB,uCAAzB;AAEA,MAAMC,QAAQ,GAAGR,MAAM,CAACS,GAAP,CAAW,UAAAC,IAAI;AAAA,WAAIC,GAAG,CAACD,IAAD,CAAP;AAAA,GAAf,CAAjB;AAEAL,EAAAA,GAAG,IAAI,CAAP;AAEDO,EAAAA,OAAO,CAACC,IAAR,CAAaL,QAAb,EAAuBM,IAAvB,CAA4B,gBAAmB;AAAA,QAAjBC,KAAiB,QAAjBA,KAAiB;AAAA,QAAVC,IAAU,QAAVA,IAAU;AACtCd,IAAAA,QAAQ,CAACK,WAAT,0EAAqCQ,KAArC,+FAA8DC,IAA9D;AACAC,IAAAA,iBAAiB,CAAC;AAACF,MAAAA,KAAK,EAALA,KAAD;AAAQC,MAAAA,IAAI,EAAJA,IAAR;AAAcX,MAAAA,GAAG,EAAHA;AAAd,KAAD,CAAjB;AACP,GAHF;AAKAO,EAAAA,OAAO,CAACM,GAAR,CAAYV,QAAZ,EAAsBM,IAAtB,CAA2B,UAAAK,CAAC;AAAA,WAC3BhB,UAAU,CAACI,WAAX,GAAyB,oCADE;AAAA,GAA5B;AAEF,CAfD;;AAiBG,SAASI,GAAT,CAAaI,KAAb,EAAoB;AACnB,SAAO,IAAIH,OAAJ,CAAY,UAACQ,GAAD,EAAS;AACxB,QAAMJ,IAAI,GAAGK,aAAa,CAAC,IAAD,EAAO,IAAP,CAA1B;AAEAC,IAAAA,UAAU,CAAC,YAAM;AACbF,MAAAA,GAAG,CAAC;AAACL,QAAAA,KAAK,EAALA,KAAD;AAAQC,QAAAA,IAAI,EAAJA;AAAR,OAAD,CAAH;AACH,KAFS,EAEPA,IAFO,CAAV;AAGH,GANM,CAAP;AAOH;;AAAA;;AAED,SAASC,iBAAT,QAA+C;AAAA,MAAnBF,KAAmB,SAAnBA,KAAmB;AAAA,MAAZC,IAAY,SAAZA,IAAY;AAAA,MAANX,GAAM,SAANA,GAAM;AAC3C,MAAMkB,EAAE,qBAAclB,GAAd,+BAAsCU,KAAtC,+BAAgEC,IAAhE,eAAR;AACAZ,EAAAA,aAAa,CAACoB,kBAAd,CAAiC,WAAjC,EAA8CD,EAA9C;AACH;;AAED,SAASF,aAAT,CAAuBI,GAAvB,EAA4BC,GAA5B,EAAiC;AAC7B,SAAOC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,MAAiBH,GAAG,GAAGD,GAAN,GAAY,CAA7B,IAAkCA,GAA7C,CAAP;AACH;;AAAA","file":"PokemonAPI.e31bb0bc.js","sourceRoot":"..","sourcesContent":["const pokemonEl = document.querySelector('.js-pokemon-profil');\r\n\r\n// fetch('https://pokeapi.co/api/v2/pokemon/1')\r\n// .then(r => r.json())\r\n// .then(r => {\r\n//         const imgPokemon = r.sprites.front_shiny;\r\n//         const namePokemon = r.name;\r\n\r\n//         pokemonEl.insertAdjacentHTML('beforeend', `<img src = ${imgPokemon}></img> <p>${namePokemon}</p>`)\r\n//     })\r\n\r\n// const puch = 'https://pokeapi.co/api/v2/pokemon/1';\r\n\r\n//     function onGetPokemon(puch) {\r\n//       return  fetch(puch)\r\n//                .then(r => r.json())\r\n//     };\r\n\r\n//     onGetPokemon(puch)\r\n//     .then(onFetchSuccess)\r\n//     .catch(onFefchError);\r\n\r\n//     function onFetchSuccess(r) {\r\n//         const imgPokemon = r.sprites.front_shiny;\r\n//         const namePokemon = r.name;\r\n\r\n//         pokemonEl.insertAdjacentHTML('beforeend', `<img src = ${imgPokemon}></img> <p>${namePokemon}</p>`)\r\n//     };\r\n\r\n//     function onFefchError(err) {\r\n//         console.log(err)\r\n//     }\r\n\r\n// const makePromise = () => {\r\n//    return new Promise((resolve, reject) => {\r\n//         resolve('Привет, это resolve');\r\n//     });\r\n// };\r\n\r\n// makePromise().then(r => console.log(r))\r\n\r\nconst horses = [\r\n    'Secretariat',\r\n    'Eclipse',\r\n    'West Australia',\r\n    'Fluing Fox',\r\n    'Sebascuit',\r\n];\r\n\r\nconst buttonRaceEl =document.querySelector('.js-button-race');\r\nconst winnerEl =document.querySelector('.js-winner');\r\nconst progressEl =document.querySelector('.js-progress');\r\nconst resultTableEl =document.querySelector('.js-result-table > tbody');\r\nlet num = 0;\r\n\r\nbuttonRaceEl.addEventListener('click', () => {\r\n    winnerEl.textContent ='';\r\n    progressEl.textContent = 'Заезд начался, ставки не принимаются!';\r\n\r\n    const promises = horses.map(hors => run(hors));\r\n    \r\n    num += 1;\r\n\r\n   Promise.race(promises).then(({horse, time}) => {\r\n            winnerEl.textContent = `Победитель ${horse}, финишировал за ${time} времени`;\r\n            apdateTableWinner({horse, time, num});\r\n    });\r\n\r\n   Promise.all(promises).then(r => \r\n    progressEl.textContent = 'Заезд окончен, ставки принимаются!');\r\n});\r\n\r\n   function run(horse) {\r\n    return new Promise((res) => {\r\n        const time = getRandomTime(2000, 3500);\r\n\r\n        setTimeout(() => {\r\n            res({horse, time});\r\n        }, time);\r\n    })\r\n};\r\n\r\nfunction apdateTableWinner({horse, time, num}) {\r\n    const tr = `<tr><td>${num}</td></tr><tr><td>${horse}</td></tr><tr><td>${time}</td></tr>`;\r\n    resultTableEl.insertAdjacentHTML('beforeend', tr);\r\n}\r\n\r\nfunction getRandomTime(min, max) {\r\n    return Math.floor(Math.random() * (max - min + 1) + min);\r\n};"]}